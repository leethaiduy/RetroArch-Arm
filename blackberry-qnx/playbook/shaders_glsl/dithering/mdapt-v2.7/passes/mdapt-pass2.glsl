// GLSL shader autogenerated by cg2glsl.py.
#if defined(VERTEX)

#if __VERSION__ >= 130
#define COMPAT_VARYING out
#define COMPAT_ATTRIBUTE in
#define COMPAT_TEXTURE texture
#else
#define COMPAT_VARYING varying 
#define COMPAT_ATTRIBUTE attribute 
#define COMPAT_TEXTURE texture2D
#endif

#ifdef GL_ES
#define COMPAT_PRECISION mediump
#else
#define COMPAT_PRECISION
#endif
COMPAT_VARYING     vec2 VARt1;
COMPAT_VARYING     vec2 _texCoord1;
COMPAT_VARYING     vec4 _position1;
struct input_dummy {
    vec2 _video_size;
    vec2 _texture_size;
    vec2 _output_dummy_size;
};
struct out_vertex {
    vec4 _position1;
    vec2 _texCoord1;
    vec2 VARt1;
};
out_vertex _ret_0;
input_dummy _IN1;
vec4 _r0011;
COMPAT_ATTRIBUTE vec4 VertexCoord;
COMPAT_ATTRIBUTE vec4 TexCoord;
COMPAT_VARYING vec4 TEX0;
 
uniform mat4 MVPMatrix;
uniform int FrameDirection;
uniform int FrameCount;
uniform COMPAT_PRECISION vec2 OutputSize;
uniform COMPAT_PRECISION vec2 TextureSize;
uniform COMPAT_PRECISION vec2 InputSize;
void main()
{
    out_vertex _OUT;
    vec2 _ps;
    _r0011 = VertexCoord.x*MVPMatrix[0];
    _r0011 = _r0011 + VertexCoord.y*MVPMatrix[1];
    _r0011 = _r0011 + VertexCoord.z*MVPMatrix[2];
    _r0011 = _r0011 + VertexCoord.w*MVPMatrix[3];
    _ps = vec2(1.00000000E+00/TextureSize.x, 1.00000000E+00/TextureSize.y);
    _OUT.VARt1 = vec2(_ps.x, _ps.y);
    _ret_0._position1 = _r0011;
    _ret_0._texCoord1 = TexCoord.xy;
    VARt1 = _OUT.VARt1;
    gl_Position = _r0011;
    TEX0.xy = TexCoord.xy;
    return;
    TEX0.xy = _ret_0._texCoord1;
} 
#elif defined(FRAGMENT)

#if __VERSION__ >= 130
#define COMPAT_VARYING in
#define COMPAT_TEXTURE texture
out vec4 FragColor;
#else
#define COMPAT_VARYING varying
#define FragColor gl_FragColor
#define COMPAT_TEXTURE texture2D
#endif

#ifdef GL_ES
#ifdef GL_FRAGMENT_PRECISION_HIGH
precision highp float;
#else
precision mediump float;
#endif
#define COMPAT_PRECISION mediump
#else
#define COMPAT_PRECISION
#endif
COMPAT_VARYING     vec2 VARt1;
COMPAT_VARYING     vec2 _texCoord;
struct input_dummy {
    vec2 _video_size;
    vec2 _texture_size;
    vec2 _output_dummy_size;
};
struct out_vertex {
    vec2 _texCoord;
    vec2 VARt1;
};
vec4 _ret_0;
vec2 _TMP61;
vec2 _TMP64;
float _TMP67;
float _TMP66;
vec2 _TMP65;
vec2 _TMP59;
vec4 _TMP58;
vec2 _TMP56;
vec4 _TMP55;
vec2 _TMP53;
vec4 _TMP52;
vec2 _TMP50;
vec4 _TMP49;
vec2 _TMP47;
vec4 _TMP46;
vec2 _TMP44;
vec4 _TMP43;
vec2 _TMP41;
vec4 _TMP40;
vec2 _TMP38;
vec4 _TMP37;
vec2 _TMP35;
vec4 _TMP34;
vec2 _TMP32;
vec4 _TMP31;
vec2 _TMP29;
vec4 _TMP28;
vec2 _TMP26;
vec4 _TMP25;
vec2 _TMP23;
vec4 _TMP22;
vec2 _TMP20;
vec4 _TMP19;
vec2 _TMP17;
vec4 _TMP16;
vec2 _TMP14;
vec4 _TMP13;
vec4 _TMP11;
vec4 _TMP9;
vec4 _TMP7;
vec4 _TMP5;
vec4 _TMP4;
vec4 _TMP3;
vec4 _TMP2;
vec4 _TMP1;
vec4 _TMP0;
float _TMP62;
out_vertex _VAR1;
uniform sampler2D Texture;
vec2 _c0080;
vec2 _c0082;
vec2 _c0084;
vec2 _c0086;
vec2 _c0088;
vec4 _TMP89;
vec2 _c0094;
vec4 _TMP95;
vec2 _c0100;
vec4 _TMP101;
vec2 _c0106;
vec4 _TMP107;
vec2 _c0112;
vec4 _TMP115;
vec2 _c0120;
vec4 _TMP123;
vec2 _c0128;
vec4 _TMP131;
vec2 _c0136;
vec4 _TMP139;
vec2 _c0144;
vec4 _TMP147;
vec2 _c0152;
vec4 _TMP155;
vec2 _c0160;
vec4 _TMP163;
vec2 _c0168;
vec4 _TMP171;
vec2 _c0176;
vec4 _TMP179;
vec2 _c0184;
vec4 _TMP187;
vec2 _c0192;
vec4 _TMP195;
vec2 _c0200;
vec4 _TMP203;
vec2 _c0208;
vec4 _TMP211;
vec2 _c0216;
vec4 _TMP219;
vec2 _c0224;
vec4 _TMP227;
vec2 _c0232;
vec4 _TMP235;
vec2 _x0240;
vec2 _TMP241;
vec2 _x0242;
vec2 _TMP249;
vec2 _x0250;
COMPAT_VARYING vec4 TEX0;
float _a;
 
uniform int FrameDirection;
uniform int FrameCount;
uniform COMPAT_PRECISION vec2 OutputSize;
uniform COMPAT_PRECISION vec2 TextureSize;
uniform COMPAT_PRECISION vec2 InputSize;
void main()
{
    vec2 _hits;
    vec2 _TMP71;
    _TMP62 = log2(1.01900000E+03);
    _a = _TMP62*6.93147182E-01;
    _TMP0 = COMPAT_TEXTURE(Texture, TEX0.xy);
    _c0080 = TEX0.xy + vec2( -1.00000000E+00, 0.00000000E+00)*VARt1;
    _TMP1 = COMPAT_TEXTURE(Texture, _c0080);
    _c0082 = TEX0.xy + vec2( 1.00000000E+00, 0.00000000E+00)*VARt1;
    _TMP2 = COMPAT_TEXTURE(Texture, _c0082);
    _c0084 = TEX0.xy + vec2( 0.00000000E+00, -1.00000000E+00)*VARt1;
    _TMP3 = COMPAT_TEXTURE(Texture, _c0084);
    _c0086 = TEX0.xy + vec2( 0.00000000E+00, 1.00000000E+00)*VARt1;
    _TMP4 = COMPAT_TEXTURE(Texture, _c0086);
    _c0088 = TEX0.xy + vec2( -2.00000000E+00, 0.00000000E+00)*VARt1;
    _TMP5 = COMPAT_TEXTURE(Texture, _c0088);
    _TMP89 = min(_TMP5, _TMP1.xxxx);
    _c0094 = TEX0.xy + vec2( 2.00000000E+00, 0.00000000E+00)*VARt1;
    _TMP7 = COMPAT_TEXTURE(Texture, _c0094);
    _TMP95 = min(_TMP7, _TMP2.xxxx);
    _c0100 = TEX0.xy + vec2( 0.00000000E+00, -2.00000000E+00)*VARt1;
    _TMP9 = COMPAT_TEXTURE(Texture, _c0100);
    _TMP101 = min(_TMP9, _TMP3.xxxx);
    _c0106 = TEX0.xy + vec2( 0.00000000E+00, 2.00000000E+00)*VARt1;
    _TMP11 = COMPAT_TEXTURE(Texture, _c0106);
    _TMP107 = min(_TMP11, _TMP4.xxxx);
    _c0112 = TEX0.xy + -VARt1;
    _TMP13 = COMPAT_TEXTURE(Texture, _c0112);
    _TMP14 = max(_TMP1.xy, _TMP3.xy);
    _TMP115 = min(_TMP13, _TMP14.xxxx);
    _c0120 = TEX0.xy + vec2( 1.00000000E+00, -1.00000000E+00)*VARt1;
    _TMP16 = COMPAT_TEXTURE(Texture, _c0120);
    _TMP17 = max(_TMP2.xy, _TMP3.xy);
    _TMP123 = min(_TMP16, _TMP17.xxxx);
    _c0128 = TEX0.xy + vec2( -1.00000000E+00, 1.00000000E+00)*VARt1;
    _TMP19 = COMPAT_TEXTURE(Texture, _c0128);
    _TMP20 = max(_TMP1.xy, _TMP4.xy);
    _TMP131 = min(_TMP19, _TMP20.xxxx);
    _c0136 = TEX0.xy + VARt1;
    _TMP22 = COMPAT_TEXTURE(Texture, _c0136);
    _TMP23 = max(_TMP2.xy, _TMP4.xy);
    _TMP139 = min(_TMP22, _TMP23.xxxx);
    _c0144 = TEX0.xy + vec2( -2.00000000E+00, -1.00000000E+00)*VARt1;
    _TMP25 = COMPAT_TEXTURE(Texture, _c0144);
    _TMP26 = max(_TMP89.xy, _TMP115.xy);
    _TMP147 = min(_TMP25, _TMP26.xxxx);
    _c0152 = TEX0.xy + vec2( 2.00000000E+00, -1.00000000E+00)*VARt1;
    _TMP28 = COMPAT_TEXTURE(Texture, _c0152);
    _TMP29 = max(_TMP95.xy, _TMP123.xy);
    _TMP155 = min(_TMP28, _TMP29.xxxx);
    _c0160 = TEX0.xy + vec2( 2.00000000E+00, 1.00000000E+00)*VARt1;
    _TMP31 = COMPAT_TEXTURE(Texture, _c0160);
    _TMP32 = max(_TMP95.xy, _TMP139.xy);
    _TMP163 = min(_TMP31, _TMP32.xxxx);
    _c0168 = TEX0.xy + vec2( -2.00000000E+00, 1.00000000E+00)*VARt1;
    _TMP34 = COMPAT_TEXTURE(Texture, _c0168);
    _TMP35 = max(_TMP89.xy, _TMP131.xy);
    _TMP171 = min(_TMP34, _TMP35.xxxx);
    _c0176 = TEX0.xy + vec2( -1.00000000E+00, -2.00000000E+00)*VARt1;
    _TMP37 = COMPAT_TEXTURE(Texture, _c0176);
    _TMP38 = max(_TMP101.xy, _TMP115.xy);
    _TMP179 = min(_TMP37, _TMP38.xxxx);
    _c0184 = TEX0.xy + vec2( 1.00000000E+00, -2.00000000E+00)*VARt1;
    _TMP40 = COMPAT_TEXTURE(Texture, _c0184);
    _TMP41 = max(_TMP101.xy, _TMP123.xy);
    _TMP187 = min(_TMP40, _TMP41.xxxx);
    _c0192 = TEX0.xy + vec2( 1.00000000E+00, 2.00000000E+00)*VARt1;
    _TMP43 = COMPAT_TEXTURE(Texture, _c0192);
    _TMP44 = max(_TMP107.xy, _TMP139.xy);
    _TMP195 = min(_TMP43, _TMP44.xxxx);
    _c0200 = TEX0.xy + vec2( -1.00000000E+00, 2.00000000E+00)*VARt1;
    _TMP46 = COMPAT_TEXTURE(Texture, _c0200);
    _TMP47 = max(_TMP107.xy, _TMP131.xy);
    _TMP203 = min(_TMP46, _TMP47.xxxx);
    _c0208 = TEX0.xy + vec2( -2.00000000E+00, -2.00000000E+00)*VARt1;
    _TMP49 = COMPAT_TEXTURE(Texture, _c0208);
    _TMP50 = max(_TMP179.xy, _TMP147.xy);
    _TMP211 = min(_TMP49, _TMP50.xxxx);
    _c0216 = TEX0.xy + vec2( 2.00000000E+00, -2.00000000E+00)*VARt1;
    _TMP52 = COMPAT_TEXTURE(Texture, _c0216);
    _TMP53 = max(_TMP187.xy, _TMP155.xy);
    _TMP219 = min(_TMP52, _TMP53.xxxx);
    _hits = _TMP211.xy + _TMP219.xy;
    _c0224 = TEX0.xy + vec2( -2.00000000E+00, 2.00000000E+00)*VARt1;
    _TMP55 = COMPAT_TEXTURE(Texture, _c0224);
    _TMP56 = max(_TMP203.xy, _TMP171.xy);
    _TMP227 = min(_TMP55, _TMP56.xxxx);
    _hits = _hits + _TMP227.xy;
    _c0232 = TEX0.xy + vec2( 2.00000000E+00, 2.00000000E+00)*VARt1;
    _TMP58 = COMPAT_TEXTURE(Texture, _c0232);
    _TMP59 = max(_TMP195.xy, _TMP163.xy);
    _TMP235 = min(_TMP58, _TMP59.xxxx);
    _hits = _hits + _TMP235.xy;
    _hits = _hits + _TMP147.xy + _TMP155.xy + _TMP163.xy + _TMP171.xy + _TMP89.xy + _TMP95.xy + vec2( 0.00000000E+00, 1.00000000E+00)*(_TMP0.xy + _TMP3.xy + _TMP101.xy + _TMP4.xy + _TMP107.xy + _TMP1.xy + _TMP2.xy + _TMP115.xy + _TMP123.xy + _TMP131.xy + _TMP139.xy + _TMP179.xy + _TMP187.xy + _TMP195.xy + _TMP203.xy);
    _x0242 = (_hits - vec2( 2.00000000E+00, 6.00000000E+00)) + 5.00000000E-01;
    _TMP65 = min(vec2( 5.00000000E-01, 5.00000000E-01), _x0242);
    _TMP241 = max(vec2( -5.00000000E-01, -5.00000000E-01), _TMP65);
    _x0240 = _a*_TMP241;
    _x0250 = 2.00000000E+00*_x0240;
    _TMP66 = pow(2.71828198E+00, _x0250.x);
    _TMP67 = pow(2.71828198E+00, _x0250.y);
    _TMP249 = vec2(_TMP66, _TMP67);
    _TMP64 = (_TMP249 - 1.00000000E+00)/(_TMP249 + 1.00000000E+00);
    _TMP61 = 5.00000000E-01*(_TMP64 + 1.00000000E+00);
    _TMP71 = _TMP0.xy*_TMP61;
    _ret_0 = vec4(_TMP71.x, _TMP71.y, _TMP0.x, _TMP0.y);
    FragColor = _ret_0;
    return;
} 
#endif
