// GLSL shader autogenerated by cg2glsl.py.
#if defined(VERTEX)

#if __VERSION__ >= 130
#define COMPAT_VARYING out
#define COMPAT_ATTRIBUTE in
#define COMPAT_TEXTURE texture
#else
#define COMPAT_VARYING varying 
#define COMPAT_ATTRIBUTE attribute 
#define COMPAT_TEXTURE texture2D
#endif

#ifdef GL_ES
#define COMPAT_PRECISION mediump
#else
#define COMPAT_PRECISION
#endif
COMPAT_VARYING     vec4 VARt7;
COMPAT_VARYING     vec4 VARt6;
COMPAT_VARYING     vec4 VARt5;
COMPAT_VARYING     vec4 VARt4;
COMPAT_VARYING     vec4 VARt3;
COMPAT_VARYING     vec4 VARt2;
COMPAT_VARYING     vec4 VARt1;
COMPAT_VARYING     vec2 _texCoord2;
COMPAT_VARYING     vec4 _color1;
COMPAT_VARYING     vec4 _position1;
struct input_dummy {
    vec2 _video_size;
    vec2 _texture_size;
    vec2 _output_dummy_size;
};
struct out_vertex {
    vec4 _position1;
    vec4 _color1;
    vec2 _texCoord2;
    vec4 VARt1;
    vec4 VARt2;
    vec4 VARt3;
    vec4 VARt4;
    vec4 VARt5;
    vec4 VARt6;
    vec4 VARt7;
};
out_vertex _ret_0;
input_dummy _IN1;
vec4 _r0011;
vec4 _v0011;
COMPAT_ATTRIBUTE vec4 VertexCoord;
COMPAT_ATTRIBUTE vec4 COLOR;
COMPAT_ATTRIBUTE vec4 TexCoord;
COMPAT_VARYING vec4 COL0;
COMPAT_VARYING vec4 TEX0;
 
uniform mat4 MVPMatrix;
uniform int FrameDirection;
uniform int FrameCount;
uniform COMPAT_PRECISION vec2 OutputSize;
uniform COMPAT_PRECISION vec2 TextureSize;
uniform COMPAT_PRECISION vec2 InputSize;
void main()
{
    out_vertex _OUT;
    vec2 _ps;
    vec2 _texCoord;
    _v0011 = vec4(float(VertexCoord.x), float(VertexCoord.y), float(VertexCoord.z), float(VertexCoord.w));
    _r0011 = _v0011.x*MVPMatrix[0];
    _r0011 = _r0011 + _v0011.y*MVPMatrix[1];
    _r0011 = _r0011 + _v0011.z*MVPMatrix[2];
    _r0011 = _r0011 + _v0011.w*MVPMatrix[3];
    _OUT._position1 = vec4(float(_r0011.x), float(_r0011.y), float(_r0011.z), float(_r0011.w));
    _ps = vec2(1.00000000E+00/TextureSize.x, 1.00000000E+00/TextureSize.y);
    _texCoord = TexCoord.xy + vec2( 1.00000001E-07, 1.00000001E-07);
    _OUT.VARt1 = _texCoord.xxxy + vec4(float(float(-_ps.x)), 0.00000000E+00, float(float(_ps.x)), float(float((-2.00000000E+00*_ps.y))));
    _OUT.VARt2 = _texCoord.xxxy + vec4(float(float(-_ps.x)), 0.00000000E+00, float(float(_ps.x)), float(float(-_ps.y)));
    _OUT.VARt3 = _texCoord.xxxy + vec4(float(float(-_ps.x)), 0.00000000E+00, float(float(_ps.x)), 0.00000000E+00);
    _OUT.VARt4 = _texCoord.xxxy + vec4(float(float(-_ps.x)), 0.00000000E+00, float(float(_ps.x)), float(float(_ps.y)));
    _OUT.VARt5 = _texCoord.xxxy + vec4(float(float(-_ps.x)), 0.00000000E+00, float(float(_ps.x)), float(float((2.00000000E+00*_ps.y))));
    _OUT.VARt6 = _texCoord.xyyy + vec4(float(float((-2.00000000E+00*_ps.x))), float(float(-_ps.y)), 0.00000000E+00, float(float(_ps.y)));
    _OUT.VARt7 = _texCoord.xyyy + vec4(float(float((2.00000000E+00*_ps.x))), float(float(-_ps.y)), 0.00000000E+00, float(float(_ps.y)));
    _ret_0._position1 = _OUT._position1;
    _ret_0._color1 = COLOR;
    _ret_0._texCoord2 = _texCoord;
    VARt1 = _OUT.VARt1;
    VARt2 = _OUT.VARt2;
    VARt3 = _OUT.VARt3;
    VARt4 = _OUT.VARt4;
    VARt5 = _OUT.VARt5;
    VARt6 = _OUT.VARt6;
    VARt7 = _OUT.VARt7;
    gl_Position = _OUT._position1;
    COL0 = COLOR;
    TEX0.xy = _texCoord;
    return;
    COL0 = _ret_0._color1;
    TEX0.xy = _ret_0._texCoord2;
} 
#elif defined(FRAGMENT)

#if __VERSION__ >= 130
#define COMPAT_VARYING in
#define COMPAT_TEXTURE texture
out vec4 FragColor;
#else
#define COMPAT_VARYING varying
#define FragColor gl_FragColor
#define COMPAT_TEXTURE texture2D
#endif

#ifdef GL_ES
#ifdef GL_FRAGMENT_PRECISION_HIGH
precision highp float;
#else
precision mediump float;
#endif
#define COMPAT_PRECISION mediump
#else
#define COMPAT_PRECISION
#endif
COMPAT_VARYING     vec4 VARt7;
COMPAT_VARYING     vec4 VARt6;
COMPAT_VARYING     vec4 VARt5;
COMPAT_VARYING     vec4 VARt4;
COMPAT_VARYING     vec4 VARt3;
COMPAT_VARYING     vec4 VARt2;
COMPAT_VARYING     vec4 VARt1;
COMPAT_VARYING     vec2 _texCoord;
COMPAT_VARYING     vec4 _color;
struct input_dummy {
    vec2 _video_size;
    vec2 _texture_size;
    vec2 _output_dummy_size;
};
struct out_vertex {
    vec4 _color;
    vec2 _texCoord;
    vec4 VARt1;
    vec4 VARt2;
    vec4 VARt3;
    vec4 VARt4;
    vec4 VARt5;
    vec4 VARt6;
    vec4 VARt7;
};
vec4 _ret_0;
vec3 _TMP62;
vec3 _TMP75;
vec3 _TMP79;
vec3 _TMP78;
float _TMP74;
float _TMP73;
float _TMP72;
float _TMP77;
vec3 _TMP61;
vec3 _TMP60;
vec3 _TMP59;
vec3 _TMP58;
vec4 _TMP57;
vec3 _TMP71;
vec3 _TMP56;
vec3 _TMP55;
vec3 _TMP54;
vec3 _TMP53;
vec4 _TMP46;
vec4 _TMP45;
vec4 _TMP80;
bvec4 _TMP44;
bvec4 _TMP43;
bvec4 _TMP42;
bvec4 _TMP41;
bvec4 _TMP40;
bvec4 _TMP39;
bvec4 _TMP38;
bvec4 _TMP37;
bvec4 _TMP36;
bvec4 _TMP35;
bvec4 _TMP34;
bvec4 _TMP33;
bvec4 _TMP32;
bvec4 _TMP31;
bvec4 _TMP30;
bvec4 _TMP29;
bvec4 _TMP28;
bvec4 _TMP27;
float _TMP76;
vec4 _TMP20;
vec4 _TMP19;
vec4 _TMP18;
vec4 _TMP17;
vec4 _TMP16;
vec4 _TMP15;
vec4 _TMP14;
vec4 _TMP13;
vec4 _TMP12;
vec4 _TMP11;
vec4 _TMP10;
vec4 _TMP9;
vec4 _TMP8;
vec4 _TMP7;
vec4 _TMP6;
vec4 _TMP5;
vec4 _TMP4;
vec4 _TMP3;
vec4 _TMP2;
vec4 _TMP1;
vec4 _TMP0;
out_vertex _VAR1;
uniform sampler2D Texture;
input_dummy _IN1;
vec2 _x0094;
vec4 _r0138;
vec4 _r0148;
vec4 _r0158;
vec4 _r0168;
vec4 _r0178;
vec4 _r0188;
vec4 _TMP199;
vec4 _a0202;
vec4 _TMP205;
vec4 _a0208;
vec4 _TMP211;
vec4 _a0214;
vec4 _TMP217;
vec4 _a0220;
vec4 _TMP223;
vec4 _a0226;
vec4 _TMP229;
vec4 _a0232;
vec4 _TMP235;
vec4 _a0238;
vec4 _TMP241;
vec4 _a0244;
vec4 _TMP247;
vec4 _a0250;
vec4 _TMP253;
vec4 _a0256;
vec4 _TMP259;
vec4 _a0262;
vec4 _TMP265;
vec4 _a0268;
vec4 _TMP271;
vec4 _a0274;
vec4 _TMP277;
vec4 _a0280;
vec4 _TMP283;
vec4 _a0286;
vec4 _TMP289;
vec4 _a0292;
vec4 _TMP295;
vec4 _a0298;
vec4 _TMP301;
vec4 _a0304;
vec4 _x0308;
vec4 _TMP309;
vec4 _x0318;
vec4 _TMP319;
vec4 _x0328;
vec4 _TMP329;
vec4 _TMP337;
vec4 _a0340;
vec4 _TMP341;
vec4 _a0344;
vec4 _TMP345;
vec4 _a0348;
vec4 _TMP349;
vec4 _a0352;
vec4 _TMP353;
vec4 _a0356;
vec4 _TMP359;
vec4 _a0362;
vec4 _TMP363;
vec4 _a0366;
vec4 _TMP367;
vec4 _a0370;
vec4 _TMP371;
vec4 _a0374;
vec4 _TMP375;
vec4 _a0378;
vec4 _TMP379;
vec4 _a0382;
vec4 _TMP383;
vec4 _a0386;
vec4 _TMP387;
vec4 _a0390;
vec4 _TMP391;
vec4 _a0394;
vec4 _TMP395;
vec4 _a0398;
vec4 _TMP399;
vec4 _a0402;
vec3 _b0406;
vec3 _b0410;
vec3 _TMP411;
vec3 _a0412;
vec3 _b0420;
vec3 _b0424;
vec3 _TMP425;
vec3 _a0426;
float _t0452;
vec3 _TMP461;
COMPAT_VARYING vec4 TEX0;
 
uniform int FrameDirection;
uniform int FrameCount;
uniform COMPAT_PRECISION vec2 OutputSize;
uniform COMPAT_PRECISION vec2 TextureSize;
uniform COMPAT_PRECISION vec2 InputSize;
void main()
{
    bvec4 _edr;
    bvec4 _edr_left;
    bvec4 _edr_up;
    bvec4 _px;
    bvec4 _interp_restriction_lv1;
    bvec4 _interp_restriction_lv2_left;
    bvec4 _interp_restriction_lv2_up;
    bvec4 _nc;
    bvec4 _nc30;
    bvec4 _nc60;
    bvec4 _nc45;
    vec4 _fx;
    vec4 _fx_left;
    vec4 _fx_up;
    vec2 _fp;
    vec3 _A11;
    vec3 _B11;
    vec3 _C1;
    vec3 _A3;
    vec3 _B3;
    vec3 _C;
    vec3 _D;
    vec3 _E;
    vec3 _F;
    vec3 _G;
    vec3 _H;
    vec3 _I;
    vec3 _G5;
    vec3 _H5;
    vec3 _I5;
    vec3 _A0;
    vec3 _D0;
    vec3 _G0;
    vec3 _C4;
    vec3 _F4;
    vec3 _I4;
    vec4 _b1;
    vec4 _c1;
    vec4 _e1;
    vec4 _i4;
    vec4 _i5;
    vec4 _h5;
    vec4 _fx45;
    vec4 _fx30;
    vec4 _fx60;
    vec3 _res;
    vec3 _n1;
    vec3 _n2;
    vec3 _n3;
    vec3 _n4;
    vec3 _s;
    vec3 _aa;
    vec3 _bb;
    vec3 _cc;
    vec3 _dd;
    vec3 _t;
    vec3 _m;
    vec3 _s1;
    vec3 _s0;
    float _blend;
    vec3 _pix;
    vec4 _final45;
    vec4 _final30;
    vec4 _final60;
    vec4 _maximo;
    _x0094 = TEX0.xy*TextureSize;
    _fp = fract(_x0094);
    _TMP0 = COMPAT_TEXTURE(Texture, VARt1.xw);
    _A11 = vec3(float(_TMP0.x), float(_TMP0.y), float(_TMP0.z));
    _TMP1 = COMPAT_TEXTURE(Texture, VARt1.yw);
    _B11 = vec3(float(_TMP1.x), float(_TMP1.y), float(_TMP1.z));
    _TMP2 = COMPAT_TEXTURE(Texture, VARt1.zw);
    _C1 = vec3(float(_TMP2.x), float(_TMP2.y), float(_TMP2.z));
    _TMP3 = COMPAT_TEXTURE(Texture, VARt2.xw);
    _A3 = vec3(float(_TMP3.x), float(_TMP3.y), float(_TMP3.z));
    _TMP4 = COMPAT_TEXTURE(Texture, VARt2.yw);
    _B3 = vec3(float(_TMP4.x), float(_TMP4.y), float(_TMP4.z));
    _TMP5 = COMPAT_TEXTURE(Texture, VARt2.zw);
    _C = vec3(float(_TMP5.x), float(_TMP5.y), float(_TMP5.z));
    _TMP6 = COMPAT_TEXTURE(Texture, VARt3.xw);
    _D = vec3(float(_TMP6.x), float(_TMP6.y), float(_TMP6.z));
    _TMP7 = COMPAT_TEXTURE(Texture, VARt3.yw);
    _E = vec3(float(_TMP7.x), float(_TMP7.y), float(_TMP7.z));
    _TMP8 = COMPAT_TEXTURE(Texture, VARt3.zw);
    _F = vec3(float(_TMP8.x), float(_TMP8.y), float(_TMP8.z));
    _TMP9 = COMPAT_TEXTURE(Texture, VARt4.xw);
    _G = vec3(float(_TMP9.x), float(_TMP9.y), float(_TMP9.z));
    _TMP10 = COMPAT_TEXTURE(Texture, VARt4.yw);
    _H = vec3(float(_TMP10.x), float(_TMP10.y), float(_TMP10.z));
    _TMP11 = COMPAT_TEXTURE(Texture, VARt4.zw);
    _I = vec3(float(_TMP11.x), float(_TMP11.y), float(_TMP11.z));
    _TMP12 = COMPAT_TEXTURE(Texture, VARt5.xw);
    _G5 = vec3(float(_TMP12.x), float(_TMP12.y), float(_TMP12.z));
    _TMP13 = COMPAT_TEXTURE(Texture, VARt5.yw);
    _H5 = vec3(float(_TMP13.x), float(_TMP13.y), float(_TMP13.z));
    _TMP14 = COMPAT_TEXTURE(Texture, VARt5.zw);
    _I5 = vec3(float(_TMP14.x), float(_TMP14.y), float(_TMP14.z));
    _TMP15 = COMPAT_TEXTURE(Texture, VARt6.xy);
    _A0 = vec3(float(_TMP15.x), float(_TMP15.y), float(_TMP15.z));
    _TMP16 = COMPAT_TEXTURE(Texture, VARt6.xz);
    _D0 = vec3(float(_TMP16.x), float(_TMP16.y), float(_TMP16.z));
    _TMP17 = COMPAT_TEXTURE(Texture, VARt6.xw);
    _G0 = vec3(float(_TMP17.x), float(_TMP17.y), float(_TMP17.z));
    _TMP18 = COMPAT_TEXTURE(Texture, VARt7.xy);
    _C4 = vec3(float(_TMP18.x), float(_TMP18.y), float(_TMP18.z));
    _TMP19 = COMPAT_TEXTURE(Texture, VARt7.xz);
    _F4 = vec3(float(_TMP19.x), float(_TMP19.y), float(_TMP19.z));
    _TMP20 = COMPAT_TEXTURE(Texture, VARt7.xw);
    _I4 = vec3(float(_TMP20.x), float(_TMP20.y), float(_TMP20.z));
    _TMP76 = dot(vec3(float(_B3.x), float(_B3.y), float(_B3.z)), vec3( 1.43593750E+01, 2.81718750E+01, 5.47265625E+00));
    _r0138.x = float(_TMP76);
    _TMP76 = dot(vec3(float(_D.x), float(_D.y), float(_D.z)), vec3( 1.43593750E+01, 2.81718750E+01, 5.47265625E+00));
    _r0138.y = float(_TMP76);
    _TMP76 = dot(vec3(float(_H.x), float(_H.y), float(_H.z)), vec3( 1.43593750E+01, 2.81718750E+01, 5.47265625E+00));
    _r0138.z = float(_TMP76);
    _TMP76 = dot(vec3(float(_F.x), float(_F.y), float(_F.z)), vec3( 1.43593750E+01, 2.81718750E+01, 5.47265625E+00));
    _r0138.w = float(_TMP76);
    _b1 = vec4(float(_r0138.x), float(_r0138.y), float(_r0138.z), float(_r0138.w));
    _TMP76 = dot(vec3(float(_C.x), float(_C.y), float(_C.z)), vec3( 1.43593750E+01, 2.81718750E+01, 5.47265625E+00));
    _r0148.x = float(_TMP76);
    _TMP76 = dot(vec3(float(_A3.x), float(_A3.y), float(_A3.z)), vec3( 1.43593750E+01, 2.81718750E+01, 5.47265625E+00));
    _r0148.y = float(_TMP76);
    _TMP76 = dot(vec3(float(_G.x), float(_G.y), float(_G.z)), vec3( 1.43593750E+01, 2.81718750E+01, 5.47265625E+00));
    _r0148.z = float(_TMP76);
    _TMP76 = dot(vec3(float(_I.x), float(_I.y), float(_I.z)), vec3( 1.43593750E+01, 2.81718750E+01, 5.47265625E+00));
    _r0148.w = float(_TMP76);
    _c1 = vec4(float(_r0148.x), float(_r0148.y), float(_r0148.z), float(_r0148.w));
    _TMP76 = dot(vec3(float(_E.x), float(_E.y), float(_E.z)), vec3( 1.43593750E+01, 2.81718750E+01, 5.47265625E+00));
    _r0158.x = float(_TMP76);
    _TMP76 = dot(vec3(float(_E.x), float(_E.y), float(_E.z)), vec3( 1.43593750E+01, 2.81718750E+01, 5.47265625E+00));
    _r0158.y = float(_TMP76);
    _TMP76 = dot(vec3(float(_E.x), float(_E.y), float(_E.z)), vec3( 1.43593750E+01, 2.81718750E+01, 5.47265625E+00));
    _r0158.z = float(_TMP76);
    _TMP76 = dot(vec3(float(_E.x), float(_E.y), float(_E.z)), vec3( 1.43593750E+01, 2.81718750E+01, 5.47265625E+00));
    _r0158.w = float(_TMP76);
    _e1 = vec4(float(_r0158.x), float(_r0158.y), float(_r0158.z), float(_r0158.w));
    _TMP76 = dot(vec3(float(_I4.x), float(_I4.y), float(_I4.z)), vec3( 1.43593750E+01, 2.81718750E+01, 5.47265625E+00));
    _r0168.x = float(_TMP76);
    _TMP76 = dot(vec3(float(_C1.x), float(_C1.y), float(_C1.z)), vec3( 1.43593750E+01, 2.81718750E+01, 5.47265625E+00));
    _r0168.y = float(_TMP76);
    _TMP76 = dot(vec3(float(_A0.x), float(_A0.y), float(_A0.z)), vec3( 1.43593750E+01, 2.81718750E+01, 5.47265625E+00));
    _r0168.z = float(_TMP76);
    _TMP76 = dot(vec3(float(_G5.x), float(_G5.y), float(_G5.z)), vec3( 1.43593750E+01, 2.81718750E+01, 5.47265625E+00));
    _r0168.w = float(_TMP76);
    _i4 = vec4(float(_r0168.x), float(_r0168.y), float(_r0168.z), float(_r0168.w));
    _TMP76 = dot(vec3(float(_I5.x), float(_I5.y), float(_I5.z)), vec3( 1.43593750E+01, 2.81718750E+01, 5.47265625E+00));
    _r0178.x = float(_TMP76);
    _TMP76 = dot(vec3(float(_C4.x), float(_C4.y), float(_C4.z)), vec3( 1.43593750E+01, 2.81718750E+01, 5.47265625E+00));
    _r0178.y = float(_TMP76);
    _TMP76 = dot(vec3(float(_A11.x), float(_A11.y), float(_A11.z)), vec3( 1.43593750E+01, 2.81718750E+01, 5.47265625E+00));
    _r0178.z = float(_TMP76);
    _TMP76 = dot(vec3(float(_G0.x), float(_G0.y), float(_G0.z)), vec3( 1.43593750E+01, 2.81718750E+01, 5.47265625E+00));
    _r0178.w = float(_TMP76);
    _i5 = vec4(float(_r0178.x), float(_r0178.y), float(_r0178.z), float(_r0178.w));
    _TMP76 = dot(vec3(float(_H5.x), float(_H5.y), float(_H5.z)), vec3( 1.43593750E+01, 2.81718750E+01, 5.47265625E+00));
    _r0188.x = float(_TMP76);
    _TMP76 = dot(vec3(float(_F4.x), float(_F4.y), float(_F4.z)), vec3( 1.43593750E+01, 2.81718750E+01, 5.47265625E+00));
    _r0188.y = float(_TMP76);
    _TMP76 = dot(vec3(float(_B11.x), float(_B11.y), float(_B11.z)), vec3( 1.43593750E+01, 2.81718750E+01, 5.47265625E+00));
    _r0188.z = float(_TMP76);
    _TMP76 = dot(vec3(float(_D0.x), float(_D0.y), float(_D0.z)), vec3( 1.43593750E+01, 2.81718750E+01, 5.47265625E+00));
    _r0188.w = float(_TMP76);
    _h5 = vec4(float(_r0188.x), float(_r0188.y), float(_r0188.z), float(_r0188.w));
    _fx = vec4( 1.00000000E+00, -1.00000000E+00, -1.00000000E+00, 1.00000000E+00)*_fp.y + vec4( 1.00000000E+00, 1.00000000E+00, -1.00000000E+00, -1.00000000E+00)*_fp.x;
    _fx_left = vec4( 1.00000000E+00, -1.00000000E+00, -1.00000000E+00, 1.00000000E+00)*_fp.y + vec4( 5.00000000E-01, 2.00000000E+00, -5.00000000E-01, -2.00000000E+00)*_fp.x;
    _fx_up = vec4( 1.00000000E+00, -1.00000000E+00, -1.00000000E+00, 1.00000000E+00)*_fp.y + vec4( 2.00000000E+00, 5.00000000E-01, -2.00000000E+00, -5.00000000E-01)*_fp.x;
    _a0202 = _e1 - _b1;
    _TMP199 = abs(_a0202);
    _TMP27 = bvec4(_TMP199.x < 2.00000000E+00, _TMP199.y < 2.00000000E+00, _TMP199.z < 2.00000000E+00, _TMP199.w < 2.00000000E+00);
    _a0208 = _e1 - _b1.yzwx;
    _TMP205 = abs(_a0208);
    _TMP28 = bvec4(_TMP205.x < 2.00000000E+00, _TMP205.y < 2.00000000E+00, _TMP205.z < 2.00000000E+00, _TMP205.w < 2.00000000E+00);
    _a0214 = _e1 - _c1.yzwx;
    _TMP211 = abs(_a0214);
    _TMP29 = bvec4(_TMP211.x < 2.00000000E+00, _TMP211.y < 2.00000000E+00, _TMP211.z < 2.00000000E+00, _TMP211.w < 2.00000000E+00);
    _a0220 = _b1.wxyz - _h5.yzwx;
    _TMP217 = abs(_a0220);
    _TMP30 = bvec4(_TMP217.x < 2.00000000E+00, _TMP217.y < 2.00000000E+00, _TMP217.z < 2.00000000E+00, _TMP217.w < 2.00000000E+00);
    _a0226 = _b1.wxyz - _c1;
    _TMP223 = abs(_a0226);
    _TMP31 = bvec4(_TMP223.x < 2.00000000E+00, _TMP223.y < 2.00000000E+00, _TMP223.z < 2.00000000E+00, _TMP223.w < 2.00000000E+00);
    _a0232 = _b1.zwxy - _h5;
    _TMP229 = abs(_a0232);
    _TMP32 = bvec4(_TMP229.x < 2.00000000E+00, _TMP229.y < 2.00000000E+00, _TMP229.z < 2.00000000E+00, _TMP229.w < 2.00000000E+00);
    _a0238 = _b1.zwxy - _c1.zwxy;
    _TMP235 = abs(_a0238);
    _TMP33 = bvec4(_TMP235.x < 2.00000000E+00, _TMP235.y < 2.00000000E+00, _TMP235.z < 2.00000000E+00, _TMP235.w < 2.00000000E+00);
    _a0244 = _b1.wxyz - _b1;
    _TMP241 = abs(_a0244);
    _TMP34 = bvec4(_TMP241.x < 1.50000000E+01, _TMP241.y < 1.50000000E+01, _TMP241.z < 1.50000000E+01, _TMP241.w < 1.50000000E+01);
    _a0250 = _b1.wxyz - _c1;
    _TMP247 = abs(_a0250);
    _TMP35 = bvec4(_TMP247.x < 1.50000000E+01, _TMP247.y < 1.50000000E+01, _TMP247.z < 1.50000000E+01, _TMP247.w < 1.50000000E+01);
    _a0256 = _b1.zwxy - _b1.yzwx;
    _TMP253 = abs(_a0256);
    _TMP36 = bvec4(_TMP253.x < 1.50000000E+01, _TMP253.y < 1.50000000E+01, _TMP253.z < 1.50000000E+01, _TMP253.w < 1.50000000E+01);
    _a0262 = _b1.zwxy - _c1.zwxy;
    _TMP259 = abs(_a0262);
    _TMP37 = bvec4(_TMP259.x < 1.50000000E+01, _TMP259.y < 1.50000000E+01, _TMP259.z < 1.50000000E+01, _TMP259.w < 1.50000000E+01);
    _a0268 = _e1 - _c1.wxyz;
    _TMP265 = abs(_a0268);
    _TMP38 = bvec4(_TMP265.x < 1.50000000E+01, _TMP265.y < 1.50000000E+01, _TMP265.z < 1.50000000E+01, _TMP265.w < 1.50000000E+01);
    _a0274 = _b1.wxyz - _h5.yzwx;
    _TMP271 = abs(_a0274);
    _TMP39 = bvec4(_TMP271.x < 1.50000000E+01, _TMP271.y < 1.50000000E+01, _TMP271.z < 1.50000000E+01, _TMP271.w < 1.50000000E+01);
    _a0280 = _b1.wxyz - _i4;
    _TMP277 = abs(_a0280);
    _TMP40 = bvec4(_TMP277.x < 1.50000000E+01, _TMP277.y < 1.50000000E+01, _TMP277.z < 1.50000000E+01, _TMP277.w < 1.50000000E+01);
    _a0286 = _b1.zwxy - _h5;
    _TMP283 = abs(_a0286);
    _TMP41 = bvec4(_TMP283.x < 1.50000000E+01, _TMP283.y < 1.50000000E+01, _TMP283.z < 1.50000000E+01, _TMP283.w < 1.50000000E+01);
    _a0292 = _b1.zwxy - _i5;
    _TMP289 = abs(_a0292);
    _TMP42 = bvec4(_TMP289.x < 1.50000000E+01, _TMP289.y < 1.50000000E+01, _TMP289.z < 1.50000000E+01, _TMP289.w < 1.50000000E+01);
    _a0298 = _e1 - _c1.zwxy;
    _TMP295 = abs(_a0298);
    _TMP43 = bvec4(_TMP295.x < 1.50000000E+01, _TMP295.y < 1.50000000E+01, _TMP295.z < 1.50000000E+01, _TMP295.w < 1.50000000E+01);
    _a0304 = _e1 - _c1;
    _TMP301 = abs(_a0304);
    _TMP44 = bvec4(_TMP301.x < 1.50000000E+01, _TMP301.y < 1.50000000E+01, _TMP301.z < 1.50000000E+01, _TMP301.w < 1.50000000E+01);
    _interp_restriction_lv1 = bvec4(_e1.x != _b1.w && _e1.x != _b1.z && (_TMP27.x || _TMP28.x || !_TMP29.x) && (_TMP30.x || _TMP31.x || _TMP32.x || _TMP33.x) && (!_TMP34.x && !_TMP35.x || !_TMP36.x && !_TMP37.x || _TMP38.x && (!_TMP39.x && !_TMP40.x || !_TMP41.x && !_TMP42.x) || _TMP43.x || _TMP44.x), _e1.y != _b1.x && _e1.y != _b1.w && (_TMP27.y || _TMP28.y || !_TMP29.y) && (_TMP30.y || _TMP31.y || _TMP32.y || _TMP33.y) && (!_TMP34.y && !_TMP35.y || !_TMP36.y && !_TMP37.y || _TMP38.y && (!_TMP39.y && !_TMP40.y || !_TMP41.y && !_TMP42.y) || _TMP43.y || _TMP44.y), _e1.z != _b1.y && _e1.z != _b1.x && (_TMP27.z || _TMP28.z || !_TMP29.z) && (_TMP30.z || _TMP31.z || _TMP32.z || _TMP33.z) && (!_TMP34.z && !_TMP35.z || !_TMP36.z && !_TMP37.z || _TMP38.z && (!_TMP39.z && !_TMP40.z || !_TMP41.z && !_TMP42.z) || _TMP43.z || _TMP44.z), _e1.w != _b1.z && _e1.w != _b1.y && (_TMP27.w || _TMP28.w || !_TMP29.w) && (_TMP30.w || _TMP31.w || _TMP32.w || _TMP33.w) && (!_TMP34.w && !_TMP35.w || !_TMP36.w && !_TMP37.w || _TMP38.w && (!_TMP39.w && !_TMP40.w || !_TMP41.w && !_TMP42.w) || _TMP43.w || _TMP44.w));
    _interp_restriction_lv2_left = bvec4(_e1.x != _c1.z && _b1.y != _c1.z, _e1.y != _c1.w && _b1.z != _c1.w, _e1.z != _c1.x && _b1.w != _c1.x, _e1.w != _c1.y && _b1.x != _c1.y);
    _interp_restriction_lv2_up = bvec4(_e1.x != _c1.x && _b1.x != _c1.x, _e1.y != _c1.y && _b1.y != _c1.y, _e1.z != _c1.z && _b1.z != _c1.z, _e1.w != _c1.w && _b1.w != _c1.w);
    _x0308 = _fx - vec4( 1.00000000E+00, 0.00000000E+00, -1.00000000E+00, 0.00000000E+00);
    _TMP80 = min(vec4( 1.00000000E+00, 1.00000000E+00, 1.00000000E+00, 1.00000000E+00), _x0308);
    _TMP309 = max(vec4( 0.00000000E+00, 0.00000000E+00, 0.00000000E+00, 0.00000000E+00), _TMP80);
    _fx45 = _TMP309*_TMP309*(3.00000000E+00 - 2.00000000E+00*_TMP309);
    _x0318 = _fx_left - vec4( 5.00000000E-01, 5.00000000E-01, -1.00000000E+00, -5.00000000E-01);
    _TMP80 = min(vec4( 1.00000000E+00, 1.00000000E+00, 1.00000000E+00, 1.00000000E+00), _x0318);
    _TMP319 = max(vec4( 0.00000000E+00, 0.00000000E+00, 0.00000000E+00, 0.00000000E+00), _TMP80);
    _fx30 = _TMP319*_TMP319*(3.00000000E+00 - 2.00000000E+00*_TMP319);
    _x0328 = _fx_up - vec4( 1.50000000E+00, -5.00000000E-01, -1.50000000E+00, 0.00000000E+00);
    _TMP80 = min(vec4( 1.00000000E+00, 1.00000000E+00, 1.00000000E+00, 1.00000000E+00), _x0328);
    _TMP329 = max(vec4( 0.00000000E+00, 0.00000000E+00, 0.00000000E+00, 0.00000000E+00), _TMP80);
    _fx60 = _TMP329*_TMP329*(3.00000000E+00 - 2.00000000E+00*_TMP329);
    _a0340 = _e1 - _c1;
    _TMP337 = abs(_a0340);
    _a0344 = _e1 - _c1.zwxy;
    _TMP341 = abs(_a0344);
    _a0348 = _c1.wxyz - _h5;
    _TMP345 = abs(_a0348);
    _a0352 = _c1.wxyz - _h5.yzwx;
    _TMP349 = abs(_a0352);
    _a0356 = _b1.zwxy - _b1.wxyz;
    _TMP353 = abs(_a0356);
    _TMP45 = _TMP337 + _TMP341 + _TMP345 + _TMP349 + 4.00000000E+00*_TMP353;
    _a0362 = _b1.zwxy - _b1.yzwx;
    _TMP359 = abs(_a0362);
    _a0366 = _b1.zwxy - _i5;
    _TMP363 = abs(_a0366);
    _a0370 = _b1.wxyz - _i4;
    _TMP367 = abs(_a0370);
    _a0374 = _b1.wxyz - _b1;
    _TMP371 = abs(_a0374);
    _a0378 = _e1 - _c1.wxyz;
    _TMP375 = abs(_a0378);
    _TMP46 = _TMP359 + _TMP363 + _TMP367 + _TMP371 + 4.00000000E+00*_TMP375;
    _edr = bvec4((_TMP45 + 3.50000000E+00).x < _TMP46.x && _interp_restriction_lv1.x, (_TMP45 + 3.50000000E+00).y < _TMP46.y && _interp_restriction_lv1.y, (_TMP45 + 3.50000000E+00).z < _TMP46.z && _interp_restriction_lv1.z, (_TMP45 + 3.50000000E+00).w < _TMP46.w && _interp_restriction_lv1.w);
    _a0382 = _b1.wxyz - _c1.zwxy;
    _TMP379 = abs(_a0382);
    _a0386 = _b1.zwxy - _c1;
    _TMP383 = abs(_a0386);
    _edr_left = bvec4((2.00000000E+00*_TMP379).x <= _TMP383.x && _interp_restriction_lv2_left.x, (2.00000000E+00*_TMP379).y <= _TMP383.y && _interp_restriction_lv2_left.y, (2.00000000E+00*_TMP379).z <= _TMP383.z && _interp_restriction_lv2_left.z, (2.00000000E+00*_TMP379).w <= _TMP383.w && _interp_restriction_lv2_left.w);
    _a0390 = _b1.wxyz - _c1.zwxy;
    _TMP387 = abs(_a0390);
    _a0394 = _b1.zwxy - _c1;
    _TMP391 = abs(_a0394);
    _edr_up = bvec4(_TMP387.x >= (2.00000000E+00*_TMP391).x && _interp_restriction_lv2_up.x, _TMP387.y >= (2.00000000E+00*_TMP391).y && _interp_restriction_lv2_up.y, _TMP387.z >= (2.00000000E+00*_TMP391).z && _interp_restriction_lv2_up.z, _TMP387.w >= (2.00000000E+00*_TMP391).w && _interp_restriction_lv2_up.w);
    _nc45 = bvec4(_edr.x && bool(_fx45.x), _edr.y && bool(_fx45.y), _edr.z && bool(_fx45.z), _edr.w && bool(_fx45.w));
    _nc30 = bvec4(_edr.x && _edr_left.x && bool(_fx30.x), _edr.y && _edr_left.y && bool(_fx30.y), _edr.z && _edr_left.z && bool(_fx30.z), _edr.w && _edr_left.w && bool(_fx30.w));
    _nc60 = bvec4(_edr.x && _edr_up.x && bool(_fx60.x), _edr.y && _edr_up.y && bool(_fx60.y), _edr.z && _edr_up.z && bool(_fx60.z), _edr.w && _edr_up.w && bool(_fx60.w));
    _a0398 = _e1 - _b1.wxyz;
    _TMP395 = abs(_a0398);
    _a0402 = _e1 - _b1.zwxy;
    _TMP399 = abs(_a0402);
    _px = bvec4(_TMP395.x <= _TMP399.x, _TMP395.y <= _TMP399.y, _TMP395.z <= _TMP399.z, _TMP395.w <= _TMP399.w);
    _n1 = vec3(float(_B11.x), float(_B11.y), float(_B11.z));
    _n2 = vec3(float(_B3.x), float(_B3.y), float(_B3.z));
    _s = vec3(float(_E.x), float(_E.y), float(_E.z));
    _n3 = vec3(float(_H.x), float(_H.y), float(_H.z));
    _n4 = vec3(float(_H5.x), float(_H5.y), float(_H5.z));
    _aa = _n2 - _n1;
    _bb = _s - _n2;
    _cc = _n3 - _s;
    _dd = _n4 - _n3;
    _t = (7.00000000E+00*(_bb + _cc) - 3.00000000E+00*(_aa + _dd))/1.60000000E+01;
    _m = vec3(_s.x < 5.00000000E-01 ? (2.00000000E+00*_s).x : (2.00000000E+00*(1.00000000E+00 - _s)).x, _s.y < 5.00000000E-01 ? (2.00000000E+00*_s).y : (2.00000000E+00*(1.00000000E+00 - _s)).y, _s.z < 5.00000000E-01 ? (2.00000000E+00*_s).z : (2.00000000E+00*(1.00000000E+00 - _s)).z);
    _TMP53 = abs(_bb);
    _b0406 = 2.00000000E+00*_TMP53;
    _m = min(_m, _b0406);
    _TMP54 = abs(_cc);
    _b0410 = 2.00000000E+00*_TMP54;
    _m = min(_m, _b0410);
    _a0412 = -_m;
    _TMP71 = min(_m, _t);
    _TMP411 = max(_a0412, _TMP71);
    _s1 = (2.00000000E+00*_fp.y - 1.00000000E+00)*_TMP411 + _s;
    _n1 = vec3(float(_D0.x), float(_D0.y), float(_D0.z));
    _n2 = vec3(float(_D.x), float(_D.y), float(_D.z));
    _n3 = vec3(float(_F.x), float(_F.y), float(_F.z));
    _n4 = vec3(float(_F4.x), float(_F4.y), float(_F4.z));
    _aa = _n2 - _n1;
    _bb = _s1 - _n2;
    _cc = _n3 - _s1;
    _dd = _n4 - _n3;
    _t = (7.00000000E+00*(_bb + _cc) - 3.00000000E+00*(_aa + _dd))/1.60000000E+01;
    _m = vec3(_s1.x < 5.00000000E-01 ? (2.00000000E+00*_s1).x : (2.00000000E+00*(1.00000000E+00 - _s1)).x, _s1.y < 5.00000000E-01 ? (2.00000000E+00*_s1).y : (2.00000000E+00*(1.00000000E+00 - _s1)).y, _s1.z < 5.00000000E-01 ? (2.00000000E+00*_s1).z : (2.00000000E+00*(1.00000000E+00 - _s1)).z);
    _TMP55 = abs(_bb);
    _b0420 = 2.00000000E+00*_TMP55;
    _m = min(_m, _b0420);
    _TMP56 = abs(_cc);
    _b0424 = 2.00000000E+00*_TMP56;
    _m = min(_m, _b0424);
    _a0426 = -_m;
    _TMP71 = min(_m, _t);
    _TMP425 = max(_a0426, _TMP71);
    _s0 = (2.00000000E+00*_fp.x - 1.00000000E+00)*_TMP425 + _s1;
    _res = vec3(float(_s0.x), float(_s0.y), float(_s0.z));
    _nc = bvec4(_nc30.x || _nc60.x || _nc45.x, _nc30.y || _nc60.y || _nc45.y, _nc30.z || _nc60.z || _nc45.z, _nc30.w || _nc60.w || _nc45.w);
    _blend = 0.00000000E+00;
    _pix = _res;
    _final45 = vec4(float(_nc45.x), float(_nc45.y), float(_nc45.z), float(_nc45.w))*_fx45;
    _final30 = vec4(float(_nc30.x), float(_nc30.y), float(_nc30.z), float(_nc30.w))*_fx30;
    _final60 = vec4(float(_nc60.x), float(_nc60.y), float(_nc60.z), float(_nc60.w))*_fx60;
    _TMP57 = max(_final30, _final60);
    _maximo = max(_TMP57, _final45);
    if (_nc.x) { 
        if (_px.x) { 
            _TMP58 = _F;
        } else {
            _TMP58 = _H;
        } 
        _pix = _TMP58;
        _blend = _maximo.x;
    } else {
        if (_nc.y) { 
            if (_px.y) { 
                _TMP59 = _B3;
            } else {
                _TMP59 = _F;
            } 
            _pix = _TMP59;
            _blend = _maximo.y;
        } else {
            if (_nc.z) { 
                if (_px.z) { 
                    _TMP60 = _D;
                } else {
                    _TMP60 = _B3;
                } 
                _pix = _TMP60;
                _blend = _maximo.z;
            } else {
                if (_nc.w) { 
                    if (_px.w) { 
                        _TMP61 = _H;
                    } else {
                        _TMP61 = _D;
                    } 
                    _pix = _TMP61;
                    _blend = _maximo.w;
                } 
            } 
        } 
    } 
    _TMP77 = pow(float(_res.x), 2.40039062E+00);
    _TMP72 = float(_TMP77);
    _TMP77 = pow(float(_res.y), 2.40039062E+00);
    _TMP73 = float(_TMP77);
    _TMP77 = pow(float(_res.z), 2.40039062E+00);
    _TMP74 = float(_TMP77);
    _res = vec3(_TMP72, _TMP73, _TMP74);
    _TMP77 = pow(float(_pix.x), 2.40039062E+00);
    _TMP72 = float(_TMP77);
    _TMP77 = pow(float(_pix.y), 2.40039062E+00);
    _TMP73 = float(_TMP77);
    _TMP77 = pow(float(_pix.z), 2.40039062E+00);
    _TMP74 = float(_TMP77);
    _pix = vec3(_TMP72, _TMP73, _TMP74);
    _t0452 = float(_blend);
    _res = _res + _t0452*(_pix - _res);
    _TMP77 = pow(float(_res.x), 4.54589844E-01);
    _TMP72 = float(_TMP77);
    _TMP77 = pow(float(_res.y), 4.54589844E-01);
    _TMP73 = float(_TMP77);
    _TMP77 = pow(float(_res.z), 4.54589844E-01);
    _TMP74 = float(_TMP77);
    _TMP62 = vec3(_TMP72, _TMP73, _TMP74);
    _TMP78 = min(vec3( 1.00000000E+00, 1.00000000E+00, 1.00000000E+00), vec3(float(_TMP62.x), float(_TMP62.y), float(_TMP62.z)));
    _TMP75 = vec3(float(_TMP78.x), float(_TMP78.y), float(_TMP78.z));
    _TMP79 = max(vec3( 0.00000000E+00, 0.00000000E+00, 0.00000000E+00), vec3(float(_TMP75.x), float(_TMP75.y), float(_TMP75.z)));
    _TMP461 = vec3(float(_TMP79.x), float(_TMP79.y), float(_TMP79.z));
    _ret_0 = vec4(float(_TMP461.x), float(_TMP461.y), float(_TMP461.z), 1.00000000E+00);
    FragColor = _ret_0;
    return;
} 
#endif
